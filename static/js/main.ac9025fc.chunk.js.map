{"version":3,"sources":["components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","api/users.ts","App.tsx","api/todos.ts","index.tsx"],"names":["UserInfo","user","className","href","email","name","TodoInfo","todo","id","cn","completed","title","TodoList","todos","map","username","preparedTodos","userId","usersFromServer","find","getMaxId","Math","max","App","useState","setTodos","setTitle","setUser","setCompleted","isInvalidTitle","setTitleCondition","isInvalidUser","setUserCondition","action","method","onSubmit","preventDefault","length","type","value","onChange","target","replace","placeholder","disabled","person","checked","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ac9025fc.chunk.js","sourcesContent":["import { User } from '../../types/User';\n\ninterface Props {\n  user: User;\n}\n\nexport const UserInfo: React.FC<Props> = ({ user }) => {\n  return (\n    <a className=\"UserInfo message-body\" href={`mailto:${user.email}`}>\n      {user.name}\n    </a>\n  );\n};\n","import cn from 'classnames';\nimport { Todo } from '../../types/Todo';\nimport { UserInfo } from '../UserInfo/UserInfo';\n\ninterface Props {\n  todo: Todo;\n}\n\nexport const TodoInfo: React.FC<Props> = ({ todo }) => {\n  return (\n    <article\n      data-id={todo.id}\n      className={cn('TodoInfo',\n        'message',\n        'is-success',\n        'pb-2',\n        { 'is-danger': !todo.completed })}\n    >\n      <h2 className=\"TodoInfo__title message-header\">\n        {todo.title}\n      </h2>\n\n      {todo.user && (<UserInfo user={todo.user} />)}\n    </article>\n  );\n};\n","import { TodoInfo } from '../TodoInfo/TodoInfo';\nimport { Todo } from '../../types/Todo';\n\ninterface Props {\n  todos: Todo[];\n}\n\nexport const TodoList: React.FC<Props> = ({ todos }) => {\n  return (\n    <section className=\"TodoList box\">\n      {todos.map(todo => (\n        <TodoInfo key={todo.id} todo={todo} />\n      ))}\n    </section>\n  );\n};\n","export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import React, { useState, FormEvent } from 'react';\nimport cn from 'classnames';\n\nimport 'bulma/css/bulma.min.css';\nimport './App.scss';\n\nimport { TodoList } from './components/TodoList/TodoList';\nimport { Todo } from './types/Todo';\nimport { User } from './types/User';\n\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\n\nfunction getUser(userId: number): User | null {\n  const foundUser = usersFromServer.find(user => user.id === userId);\n\n  return foundUser || null;\n}\n\nconst preparedTodos: Todo[] = todosFromServer.map(todo => ({\n  ...todo,\n  user: getUser(todo.userId),\n}));\n\nconst getMaxId = (todos: Todo[]) => Math.max(...todos.map(todo => todo.id));\n\nexport const App = () => {\n  const [todos, setTodos] = useState(preparedTodos);\n  const [title, setTitle] = useState('');\n  const [user, setUser] = useState(-1);\n  const [completed, setCompleted] = useState(false);\n  const [isInvalidTitle, setTitleCondition] = useState(false);\n  const [isInvalidUser, setUserCondition] = useState(false);\n\n  const handleTitle = (action: React.ChangeEvent<HTMLInputElement>) => {\n    setTitle(action.target.value.replace(/[^a-z0-9а-я ]/gi, ''));\n    setTitleCondition(false);\n  };\n\n  const handleUser = (action: React.ChangeEvent<HTMLSelectElement>) => {\n    setUser(+action.target.value);\n    setUserCondition(false);\n  };\n\n  const handleCompleted = (action: React.ChangeEvent<HTMLInputElement>) => {\n    setCompleted(action.target.checked);\n  };\n\n  const makeNewTodo = (action: FormEvent) => {\n    action.preventDefault();\n\n    setTitleCondition(title.length === 0);\n    setUserCondition(user === -1);\n\n    if (title.length !== 0 && user !== -1) {\n      setTodos([\n        {\n          id: getMaxId(todos) + 1,\n          title,\n          completed,\n          userId: usersFromServer[user - 1].id,\n          user: usersFromServer[user - 1],\n        },\n        ...todos,\n      ]);\n\n      setTitle('');\n      setUser(-1);\n      setCompleted(false);\n    }\n  };\n\n  return (\n    <div\n      className=\"App container is-max-desktop block\"\n    >\n      <h1 className=\"subtitle is-4\">Add todo form</h1>\n\n      <form\n        action=\"/api/users\"\n        method=\"POST\"\n        onSubmit={makeNewTodo}\n      >\n        {isInvalidTitle && (\n          <span className=\"tag is-danger mb-2\">Please enter a title</span>\n        )}\n\n        <div className=\"field\">\n          <input\n            className={cn('input',\n              'is-primary',\n              { 'is-danger': isInvalidTitle })}\n            type=\"text\"\n            data-cy=\"titleInput\"\n            value={title}\n            onChange={handleTitle}\n            placeholder=\"Please enter a title\"\n          />\n        </div>\n\n        {isInvalidUser && (\n          <span className=\"tag is-danger mb-2\">Please choose a user</span>\n        )}\n\n        <div className={cn('select',\n          'field',\n          'is-primary',\n          { 'is-danger': isInvalidUser })}\n        >\n          <select\n            data-cy=\"userSelect\"\n            value={user}\n            onChange={handleUser}\n          >\n            <option value={-1} disabled>Choose a user</option>\n\n            {usersFromServer.map(person => (\n              <option value={person.id} key={person.id}>\n                {person.name}\n              </option>\n            ))}\n          </select>\n        </div>\n\n        <div className=\"field checkbox\">\n          <label className=\"field__label\">\n            Completed:\n            <input\n              type=\"checkbox\"\n              checked={completed}\n              onChange={handleCompleted}\n            />\n          </label>\n        </div>\n\n        <button\n          className=\"button is-primary\"\n          type=\"submit\"\n          data-cy=\"submitButton\"\n        >\n          Add\n        </button>\n      </form>\n\n      <TodoList todos={todos} />\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}